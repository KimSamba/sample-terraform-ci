name: Run plan and deployment

on:
  workflow_call:
    inputs:
      working_directory:
        type: string
        required: true
      project_id:
        type: string
        required: true
      deploy:
        type: boolean
        default: false
      environment:
        type: string
        required: true
    secrets:
      google_credentials:
        required: true

permissions:
  pull-requests: write

jobs:
  test:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2
    - id: auth
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.google_credentials }}'
    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ${{ inputs.working_directory }}
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      env:
        TF_VAR_access_json: ${{ secrets.google_credentials }}
        TF_VAR_project_id: ${{ inputs.project_id }}
      continue-on-error: true
      working-directory: ${{ inputs.working_directory }}
    - uses: actions/github-script@v6
      if: ${{ inputs.deploy }}
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>

          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`

          </details>

          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
